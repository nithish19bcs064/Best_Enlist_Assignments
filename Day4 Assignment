{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyP/t6nR9jggqZibAunTKl3w",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nithish19bcs064/Best_Enlist_Assignments/blob/main/Day4%20Assignment\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lXkLlz0PDqun",
        "outputId": "f1bdd2a8-b8fb-4b75-ee6a-30aba257aa81"
      },
      "source": [
        "#1.Create three variables (a,b,c) to same value of any integer\n",
        "a=b=c=20\n",
        "\n",
        "print(a,b,c)\n",
        "\n",
        "print(a/10)\n",
        "\n",
        "print(b*50)\n",
        "\n",
        "print(c+60)"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "20 20 20\n",
            "2.0\n",
            "1000\n",
            "80\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "99-x77ZeD1S_",
        "outputId": "c9633a7e-f865-4202-fe79-71b108d0d1b4"
      },
      "source": [
        "#2.Create a String variable of 5 characters and replace the 3rd character with\n",
        "\n",
        "var=\"abcde\"\n",
        "var2=var.replace('c','G') # by assigning new varaible\n",
        "var2\n",
        "\n",
        "\n",
        "print(var.replace('c',\"G\")) # work with the same \n",
        "\n"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "abGde\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7iBB_bc0D2g2",
        "outputId": "82715ff0-b06a-4b35-9559-f200334ed8d9"
      },
      "source": [
        "#Using index Position\n",
        "x='abcde'\n",
        "index_pos=2\n",
        "new_var=\"G\"\n",
        "x=x[0:index_pos]+new_var+x[index_pos+1:]\n",
        "print(x)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "abGde\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I6MzWq67D7-y",
        "outputId": "13d9bc3f-7978-472e-a331-3f2aaa0efef4"
      },
      "source": [
        "#3.Create two values (a,b) of int,float data type & convert the \n",
        "#vise versa, Hint : convert a from int to float datatype & b from \n",
        "#float to int datatype\n",
        "\n",
        "#Declaring the Variables \n",
        "a=10\n",
        "b=5.5\n",
        "print(type(a))\n",
        "print(type(b))"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'int'>\n",
            "<class 'float'>\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lpCimpfJES-1",
        "outputId": "ab04171f-769d-44a2-8201-6ed3b87af049"
      },
      "source": [
        "c=float(a)\n",
        "print(type(c))\n",
        "print(c)\n",
        "\n",
        "d=int(b)\n",
        "print(type(d))\n",
        "print(d)"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'float'>\n",
            "10.0\n",
            "<class 'int'>\n",
            "5\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}